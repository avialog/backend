basePath: /api
definitions:
  github_com_avialog_backend_internal_dto.AircraftRequest:
    properties:
      aircraft_model:
        type: string
      image_url:
        type: string
      registration_number:
        type: string
      remarks:
        type: string
    required:
    - aircraft_model
    - registration_number
    type: object
  github_com_avialog_backend_internal_dto.AircraftResponse:
    properties:
      aircraft_model:
        type: string
      id:
        type: integer
      image_url:
        type: string
      registration_number:
        type: string
      remarks:
        type: string
    required:
    - aircraft_model
    - registration_number
    type: object
  github_com_avialog_backend_internal_dto.ContactRequest:
    properties:
      avatar_url:
        type: string
      company:
        type: string
      email_address:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      note:
        type: string
      phone:
        type: string
    required:
    - first_name
    type: object
  github_com_avialog_backend_internal_dto.ContactResponse:
    properties:
      avatar_url:
        type: string
      company:
        type: string
      email_address:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      note:
        type: string
      phone:
        type: string
    required:
    - first_name
    type: object
  github_com_avialog_backend_internal_dto.LandingEntry:
    properties:
      airport_code:
        type: string
      approach_type:
        $ref: '#/definitions/github_com_avialog_backend_internal_model.ApproachType'
      count:
        type: integer
      day_count:
        type: integer
      night_count:
        type: integer
    type: object
  github_com_avialog_backend_internal_dto.LogbookRequest:
    properties:
      aircraft_id:
        type: integer
      cross_country_time:
        $ref: '#/definitions/time.Duration'
      dual_given_time:
        $ref: '#/definitions/time.Duration'
      dual_received_time:
        $ref: '#/definitions/time.Duration'
      ifr_actual_time:
        $ref: '#/definitions/time.Duration'
      ifr_simulated_time:
        $ref: '#/definitions/time.Duration'
      ifr_time:
        $ref: '#/definitions/time.Duration'
      landing_airport_code:
        type: string
      landing_time:
        type: string
      landings:
        items:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.LandingEntry'
        type: array
      multi_pilot_time:
        $ref: '#/definitions/time.Duration'
      night_time:
        $ref: '#/definitions/time.Duration'
      passengers:
        items:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.PassengerEntry'
        type: array
      personal_remarks:
        type: string
      pilot_in_command_time:
        $ref: '#/definitions/time.Duration'
      remarks:
        type: string
      second_in_command_time:
        $ref: '#/definitions/time.Duration'
      signature_url:
        type: string
      simulator_time:
        $ref: '#/definitions/time.Duration'
      style:
        $ref: '#/definitions/github_com_avialog_backend_internal_model.Style'
      takeoff_airport_code:
        type: string
      takeoff_time:
        type: string
      total_block_time:
        $ref: '#/definitions/time.Duration'
    type: object
  github_com_avialog_backend_internal_dto.LogbookResponse:
    properties:
      aircraft_id:
        type: integer
      cross_country_time:
        $ref: '#/definitions/time.Duration'
      dual_given_time:
        $ref: '#/definitions/time.Duration'
      dual_received_time:
        $ref: '#/definitions/time.Duration'
      ifr_actual_time:
        $ref: '#/definitions/time.Duration'
      ifr_simulated_time:
        $ref: '#/definitions/time.Duration'
      ifr_time:
        $ref: '#/definitions/time.Duration'
      landing_airport_code:
        type: string
      landing_time:
        type: string
      landings:
        items:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.LandingEntry'
        type: array
      multi_pilot_time:
        $ref: '#/definitions/time.Duration'
      night_time:
        $ref: '#/definitions/time.Duration'
      passengers:
        items:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.PassengerEntry'
        type: array
      personal_remarks:
        type: string
      pilot_in_command_time:
        $ref: '#/definitions/time.Duration'
      remarks:
        type: string
      second_in_command_time:
        $ref: '#/definitions/time.Duration'
      signature_url:
        type: string
      simulator_time:
        $ref: '#/definitions/time.Duration'
      style:
        $ref: '#/definitions/github_com_avialog_backend_internal_model.Style'
      takeoff_airport_code:
        type: string
      takeoff_time:
        type: string
      total_block_time:
        $ref: '#/definitions/time.Duration'
    type: object
  github_com_avialog_backend_internal_dto.PassengerEntry:
    properties:
      company:
        type: string
      email_address:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      note:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/github_com_avialog_backend_internal_model.Role'
    type: object
  github_com_avialog_backend_internal_dto.ServerInfo:
    properties:
      healthy:
        type: boolean
    type: object
  github_com_avialog_backend_internal_dto.UserRequest:
    properties:
      avatar_url:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      signature_url:
        type: string
      street:
        type: string
      timezone:
        type: string
    type: object
  github_com_avialog_backend_internal_dto.UserResponse:
    properties:
      avatar_url:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      signature_url:
        type: string
      street:
        type: string
      timezone:
        type: string
    required:
    - email
    type: object
  github_com_avialog_backend_internal_model.ApproachType:
    enum:
    - VISUAL
    type: string
    x-enum-varnames:
    - ApproachTypeVisual
  github_com_avialog_backend_internal_model.Role:
    enum:
    - PIC
    - SIC
    - DUAL
    - SPIC
    - P1S
    - INS
    - EXM
    - ATT
    - OTH
    type: string
    x-enum-varnames:
    - RolePilotInCommand
    - RoleSecondInCommand
    - RoleDual
    - RoleStudentPilotInCommand
    - RolePilotInCommandUnderSupervision
    - RoleInstructor
    - RoleExaminer
    - RoleFlightAttendant
    - RoleOther
  github_com_avialog_backend_internal_model.Style:
    enum:
    - VFR
    - IFR
    - "Y"
    - Z
    - Z2
    type: string
    x-enum-varnames:
    - StyleVFR
    - StyleIFR
    - StyleY
    - StyleZ
    - StyleZ2
  github_com_avialog_backend_internal_util.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    required:
    - code
    - message
    type: object
  time.Duration:
    enum:
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - 1
    - 1000
    - 1000000
    - 1000000000
    type: integer
    x-enum-varnames:
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
info:
  contact: {}
  description: This is a sample server.
  termsOfService: http://swagger.io/terms/
  title: Avialog API
  version: "1.0"
paths:
  /aircraft:
    delete:
      description: Delete aircraft
      parameters:
      - description: Aircraft ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Aircraft deleted successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Delete aircraft
      tags:
      - aircraft
    get:
      description: Get user aircraft
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.AircraftResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get user aircraft (all)
      tags:
      - aircraft
    post:
      consumes:
      - application/json
      description: Insert aircraft
      parameters:
      - description: Aircraft
        in: body
        name: aircraft
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.AircraftRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.AircraftResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Insert aircraft
      tags:
      - aircraft
    put:
      consumes:
      - application/json
      description: Update aircraft
      parameters:
      - description: Aircraft ID
        in: path
        name: id
        required: true
        type: string
      - description: Aircraft
        in: body
        name: aircraft
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.AircraftRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.AircraftResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Update aircraft
      tags:
      - aircraft
  /contacts:
    get:
      description: Get a list of contacts for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_avialog_backend_internal_dto.ContactResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get user contacts
      tags:
      - contacts
    post:
      consumes:
      - application/json
      description: Insert a new contact for a user
      parameters:
      - description: Contact information to insert
        in: body
        name: contactRequest
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.ContactRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.ContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Insert a new contact
      tags:
      - contacts
  /contacts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing contact for a user
      parameters:
      - description: Contact ID to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Contact deleted successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Delete an existing contact
      tags:
      - contacts
    put:
      consumes:
      - application/json
      description: Update an existing contact for a user
      parameters:
      - description: Contact ID to update
        in: path
        name: id
        required: true
        type: integer
      - description: Contact information to update
        in: body
        name: contactRequest
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.ContactRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.ContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Update an existing contact
      tags:
      - contacts
  /healthz:
    get:
      description: Returns the health status of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.ServerInfo'
      summary: Health check endpoint
      tags:
      - info
  /logbook:
    get:
      description: Get a list of logbook entries for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_avialog_backend_internal_dto.LogbookResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get user logbook entries
      tags:
      - logbook
    post:
      consumes:
      - application/json
      description: Insert a new logbook entry for a user
      parameters:
      - description: Logbook entry information to insert
        in: body
        name: logbookRequest
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.LogbookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.LogbookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Insert a new logbook entry
      tags:
      - logbook
  /logbook/{id}:
    delete:
      description: Delete an existing logbook entry for a user
      parameters:
      - description: Flight ID to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Logbook entry deleted successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Delete an existing logbook entry
      tags:
      - logbook
    put:
      consumes:
      - application/json
      description: Update an existing logbook entry for a user
      parameters:
      - description: Flight ID to update
        in: path
        name: id
        required: true
        type: integer
      - description: Logbook entry information to update
        in: body
        name: logbookRequest
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.LogbookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.LogbookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Update an existing logbook entry
      tags:
      - logbook
  /profile:
    get:
      description: Get a user by userID from the token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Update user profile information
      parameters:
      - description: User profile information to update
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/github_com_avialog_backend_internal_dto.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_avialog_backend_internal_util.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - profile
securityDefinitions:
  ApiKeyAuth:
    description: Authorization by JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
